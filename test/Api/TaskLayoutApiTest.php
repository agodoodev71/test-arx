<?php
/**
 * TaskLayoutApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * TaskLayoutApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TaskLayoutApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for taskLayoutDeleteTaskLayout
     *
     * This call deletes a task layout by the id.
     *
     */
    public function testTaskLayoutDeleteTaskLayout()
    {
    }

    /**
     * Test case for taskLayoutGetTaskLayoutById
     *
     * This call returns the task layout by the task layout id.
     *
     */
    public function testTaskLayoutGetTaskLayoutById()
    {
    }

    /**
     * Test case for taskLayoutGetTaskLayoutByTaskWorkId
     *
     * This call returns the task layout by the taskwork.
     *
     */
    public function testTaskLayoutGetTaskLayoutByTaskWorkId()
    {
    }

    /**
     * Test case for taskLayoutGetTaskLayoutForUser
     *
     * This call returns the task layout for user default if exist.
     *
     */
    public function testTaskLayoutGetTaskLayoutForUser()
    {
    }

    /**
     * Test case for taskLayoutGetTaskLayouts
     *
     * This call returns all task layouts configured.
     *
     */
    public function testTaskLayoutGetTaskLayouts()
    {
    }

    /**
     * Test case for taskLayoutNewTaskLayout
     *
     * This call inserts a new task layout.
     *
     */
    public function testTaskLayoutNewTaskLayout()
    {
    }

    /**
     * Test case for taskLayoutUpdateTaskLayout
     *
     * This call updates a task layout.
     *
     */
    public function testTaskLayoutUpdateTaskLayout()
    {
    }

    /**
     * Test case for taskLayoutUpdateTaskLayoutPriority
     *
     * This call updates the priority of a task layout.
     *
     */
    public function testTaskLayoutUpdateTaskLayoutPriority()
    {
    }

    /**
     * Test case for taskLayoutWriteTaskLayoutForUser
     *
     * This call inserts or updates personal task layout for user.
     *
     */
    public function testTaskLayoutWriteTaskLayoutForUser()
    {
    }
}
