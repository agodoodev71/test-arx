<?php
/**
 * StampsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * StampsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StampsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for stampsApplyStampInstanceFromDocnumber
     *
     * This call apply stampinstances in document.
     *
     */
    public function testStampsApplyStampInstanceFromDocnumber()
    {
    }

    /**
     * Test case for stampsApplyStampInstanceFromProcessDoc
     *
     * This call apply stampinstances in process document.
     *
     */
    public function testStampsApplyStampInstanceFromProcessDoc()
    {
    }

    /**
     * Test case for stampsCanAddVirtualStamp
     *
     * This call returns if user can add virtual stamps.
     *
     */
    public function testStampsCanAddVirtualStamp()
    {
    }

    /**
     * Test case for stampsCanApplyStamp
     *
     * This call returns if user can apply stamps.
     *
     */
    public function testStampsCanApplyStamp()
    {
    }

    /**
     * Test case for stampsConvertToPngByDocnumberAndPageIndex
     *
     * This call returns the png file results on convertion from pdf file of profile.
     *
     */
    public function testStampsConvertToPngByDocnumberAndPageIndex()
    {
    }

    /**
     * Test case for stampsConvertToPngByProcessDocAndPageIndex
     *
     * This call returns the png file results on convertion from pdf file of task profile.
     *
     */
    public function testStampsConvertToPngByProcessDocAndPageIndex()
    {
    }

    /**
     * Test case for stampsDeleteStampInstanceFromDocnumber
     *
     * This call deletes stampinstances from docnumber.
     *
     */
    public function testStampsDeleteStampInstanceFromDocnumber()
    {
    }

    /**
     * Test case for stampsDeleteStampInstanceFromProcessDoc
     *
     * This call deletes stampinstances from docnumber for task.
     *
     */
    public function testStampsDeleteStampInstanceFromProcessDoc()
    {
    }

    /**
     * Test case for stampsGet
     *
     * This call returns all the type of stamp defined in Arxivar.
     *
     */
    public function testStampsGet()
    {
    }

    /**
     * Test case for stampsGetPdfPageNumber
     *
     * This call returns the number of pages for pdf document.
     *
     */
    public function testStampsGetPdfPageNumber()
    {
    }

    /**
     * Test case for stampsGetPdfPageNumberForProcessDoc
     *
     * This call returns the number of pages for pdf document for task.
     *
     */
    public function testStampsGetPdfPageNumberForProcessDoc()
    {
    }

    /**
     * Test case for stampsGetStampsDefinitionByDocnumber
     *
     * This call returns all the stamp definition virtual by a docnumber.
     *
     */
    public function testStampsGetStampsDefinitionByDocnumber()
    {
    }

    /**
     * Test case for stampsGetStampsDefinitionByProcessDoc
     *
     * This call returns all the stamp definition virtual by a process document.
     *
     */
    public function testStampsGetStampsDefinitionByProcessDoc()
    {
    }

    /**
     * Test case for stampsGetStampsInstanceByDocnumber
     *
     * This call returns all the stamp applied virtual on a docnumber.
     *
     */
    public function testStampsGetStampsInstanceByDocnumber()
    {
    }

    /**
     * Test case for stampsGetStampsInstanceByProcessDoc
     *
     * This call returns all the stamp applied virtual on a process document.
     *
     */
    public function testStampsGetStampsInstanceByProcessDoc()
    {
    }

    /**
     * Test case for stampsInsertStampInstanceFromDocnumber
     *
     * This call inserts new stampinstances for docnumber.
     *
     */
    public function testStampsInsertStampInstanceFromDocnumber()
    {
    }

    /**
     * Test case for stampsInsertStampInstanceFromProcessDoc
     *
     * This call inserts new stampinstances for process document.
     *
     */
    public function testStampsInsertStampInstanceFromProcessDoc()
    {
    }

    /**
     * Test case for stampsUpdateStampInstanceFromDocnumber
     *
     * This call updates new stampinstances for docnumber.
     *
     */
    public function testStampsUpdateStampInstanceFromDocnumber()
    {
    }

    /**
     * Test case for stampsUpdateStampInstanceFromProcessDoc
     *
     * This call updates stampinstances for process document.
     *
     */
    public function testStampsUpdateStampInstanceFromProcessDoc()
    {
    }
}
