<?php
/**
 * QueueApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * QueueApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class QueueApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for queueAdminDeleteQueue
     *
     * This call checks if to delete a queue (administrator required).
     *
     */
    public function testQueueAdminDeleteQueue()
    {
    }

    /**
     * Test case for queueAdminGetQueueAggregationList
     *
     * This call returns the queue aggregated information list  (administrator required).
     *
     */
    public function testQueueAdminGetQueueAggregationList()
    {
    }

    /**
     * Test case for queueAdminGetQueueAggregationList_0
     *
     * This call returns the specific queue aggregated information (administrator required).
     *
     */
    public function testQueueAdminGetQueueAggregationList0()
    {
    }

    /**
     * Test case for queueAdminGetQueueEndJobInfo
     *
     * This call returns the end job information (administrator required).
     *
     */
    public function testQueueAdminGetQueueEndJobInfo()
    {
    }

    /**
     * Test case for queueAdminGetQueueJobInfo
     *
     * This call returns the job information list (administrator required).
     *
     */
    public function testQueueAdminGetQueueJobInfo()
    {
    }

    /**
     * Test case for queueAdminGetQueueList
     *
     * This call returns all queue (administrator required).
     *
     */
    public function testQueueAdminGetQueueList()
    {
    }

    /**
     * Test case for queueAdminGetQueueWorkJobInfo
     *
     * This call returns a work job information (administrator required).
     *
     */
    public function testQueueAdminGetQueueWorkJobInfo()
    {
    }

    /**
     * Test case for queueDeleteJob
     *
     * This call checks if to delete a queue job.
     *
     */
    public function testQueueDeleteJob()
    {
    }

    /**
     * Test case for queueDeleteQueue
     *
     * This call checks if to delete a queue.
     *
     */
    public function testQueueDeleteQueue()
    {
    }

    /**
     * Test case for queueEnqueuedJob
     *
     * This call checks if to equeue a job is in state Scheduled or Failed.
     *
     */
    public function testQueueEnqueuedJob()
    {
    }

    /**
     * Test case for queueGetJobInfo
     *
     * This call returns a job info.
     *
     */
    public function testQueueGetJobInfo()
    {
    }

    /**
     * Test case for queueGetQueueAggregationList
     *
     * This call returns the queue aggregated information list.
     *
     */
    public function testQueueGetQueueAggregationList()
    {
    }

    /**
     * Test case for queueGetQueueAggregationList_0
     *
     * This call returns the specific queue aggregated information.
     *
     */
    public function testQueueGetQueueAggregationList0()
    {
    }

    /**
     * Test case for queueGetQueueAggregationStatusInfo
     *
     * This call returns the specific queue aggregated status.
     *
     */
    public function testQueueGetQueueAggregationStatusInfo()
    {
    }

    /**
     * Test case for queueGetQueueEndJobInfo
     *
     * This call returns the end job information.
     *
     */
    public function testQueueGetQueueEndJobInfo()
    {
    }

    /**
     * Test case for queueGetQueueJobInfo
     *
     * This call returns the job info information list.
     *
     */
    public function testQueueGetQueueJobInfo()
    {
    }

    /**
     * Test case for queueGetQueueJobSucceededResultList
     *
     * Gets the job result of specific queue.
     *
     */
    public function testQueueGetQueueJobSucceededResultList()
    {
    }

    /**
     * Test case for queueGetQueueList
     *
     * This call returns all jobs of queue.
     *
     */
    public function testQueueGetQueueList()
    {
    }

    /**
     * Test case for queueGetQueueWorkItemCount
     *
     * This call returns the counts of work item for a queue.
     *
     */
    public function testQueueGetQueueWorkItemCount()
    {
    }

    /**
     * Test case for queueGetQueueWorkItemLeftCount
     *
     * This call returns the counts how many work item jobs left.
     *
     */
    public function testQueueGetQueueWorkItemLeftCount()
    {
    }

    /**
     * Test case for queueGetQueueWorkJobInfo
     *
     * This call returns a work job information.
     *
     */
    public function testQueueGetQueueWorkJobInfo()
    {
    }
}
