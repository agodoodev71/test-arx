<?php
/**
 * WorkflowApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * WorkflowApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WorkflowApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for workflowCanStartByDocnumber
     *
     * Check if a new workflow can start.
     *
     */
    public function testWorkflowCanStartByDocnumber()
    {
    }

    /**
     * Test case for workflowDeleteWorkflow
     *
     * This call deletes instance of workflow.
     *
     */
    public function testWorkflowDeleteWorkflow()
    {
    }

    /**
     * Test case for workflowFreeUserConstraint
     *
     * This call removes the user checkout.
     *
     */
    public function testWorkflowFreeUserConstraint()
    {
    }

    /**
     * Test case for workflowGetAllEventsForManualStarts
     *
     * This call returns all available events for manual start a workflow by the user.
     *
     */
    public function testWorkflowGetAllEventsForManualStarts()
    {
    }

    /**
     * Test case for workflowGetEventsForManualStarts
     *
     * This call returns all available events for manual start a workflow on a list of profiles.
     *
     */
    public function testWorkflowGetEventsForManualStarts()
    {
    }

    /**
     * Test case for workflowGetTasksExternalIds
     *
     * This call retruns all external identifier of tasks.
     *
     */
    public function testWorkflowGetTasksExternalIds()
    {
    }

    /**
     * Test case for workflowGetWorkflowInfoByDocnumber
     *
     * This call returns all workflow associated with a document.
     *
     */
    public function testWorkflowGetWorkflowInfoByDocnumber()
    {
    }

    /**
     * Test case for workflowGetWorkflowInfoByProcessId
     *
     * This call returns the workflow information of process.
     *
     */
    public function testWorkflowGetWorkflowInfoByProcessId()
    {
    }

    /**
     * Test case for workflowGetWorkflows
     *
     * This call returns all workflow configured.
     *
     */
    public function testWorkflowGetWorkflows()
    {
    }

    /**
     * Test case for workflowRemoveProfileFromTask
     *
     * This call removes a document from a workflow process.
     *
     */
    public function testWorkflowRemoveProfileFromTask()
    {
    }

    /**
     * Test case for workflowStopWorkflow
     *
     * This call stops instance of workflow.
     *
     */
    public function testWorkflowStopWorkflow()
    {
    }

    /**
     * Test case for workflowWorkflowManualStart
     *
     * This call starts a new instance of workflow on a document.
     *
     */
    public function testWorkflowWorkflowManualStart()
    {
    }

    /**
     * Test case for workflowWorkflowManualStartWithoutDocnumber
     *
     * This call starts a new instance of workflow without document.
     *
     */
    public function testWorkflowWorkflowManualStartWithoutDocnumber()
    {
    }
}
