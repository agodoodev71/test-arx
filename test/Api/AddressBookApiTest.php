<?php
/**
 * AddressBookApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * AddressBookApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AddressBookApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addressBookAddressBookCanWriteByAddressBookId
     *
     * This call returns true if the connected user can edit an address book.
     *
     */
    public function testAddressBookAddressBookCanWriteByAddressBookId()
    {
    }

    /**
     * Test case for addressBookAddressBookCanWriteByCategoryId
     *
     * This call returns true if the connected user can edit address books of a specified category.
     *
     */
    public function testAddressBookAddressBookCanWriteByCategoryId()
    {
    }

    /**
     * Test case for addressBookDeleteAddressBook
     *
     * This call deletes an addressbook by its Id.
     *
     */
    public function testAddressBookDeleteAddressBook()
    {
    }

    /**
     * Test case for addressBookDeleteAddressBook_0
     *
     * This call deletes addressbooks by their ids.
     *
     */
    public function testAddressBookDeleteAddressBook0()
    {
    }

    /**
     * Test case for addressBookDeleteContact
     *
     * This call deletes a contact.
     *
     */
    public function testAddressBookDeleteContact()
    {
    }

    /**
     * Test case for addressBookDeleteContact_0
     *
     * This call deletes contacts by their ids.
     *
     */
    public function testAddressBookDeleteContact0()
    {
    }

    /**
     * Test case for addressBookGetAddressBookComboFieldValues
     *
     * This call returns the values for combo box address book additional field.
     *
     */
    public function testAddressBookGetAddressBookComboFieldValues()
    {
    }

    /**
     * Test case for addressBookGetByAddressBookId
     *
     * This call returns new profile data (for archiving purpose) by address book identifier.
     *
     */
    public function testAddressBookGetByAddressBookId()
    {
    }

    /**
     * Test case for addressBookGetByContactId
     *
     * This call returns new profile data (for archiving purpose) by contact identifier.
     *
     */
    public function testAddressBookGetByContactId()
    {
    }

    /**
     * Test case for addressBookGetById
     *
     * This call returns an adressbook by the identifier.
     *
     */
    public function testAddressBookGetById()
    {
    }

    /**
     * Test case for addressBookGetByUserId
     *
     * This call returns new profile data (for archiving purpose) by user identifier.
     *
     */
    public function testAddressBookGetByUserId()
    {
    }

    /**
     * Test case for addressBookGetForInsert
     *
     * This call returns new AddreBookDTO object for insert purpose.
     *
     */
    public function testAddressBookGetForInsert()
    {
    }

    /**
     * Test case for addressBookGetForInsert_0
     *
     * This call returns new AddreBookDTO for insert purpose by category.
     *
     */
    public function testAddressBookGetForInsert0()
    {
    }

    /**
     * Test case for addressBookGetPermissionByAddrebookId
     *
     * This call returns all permissions for an AddreBook.
     *
     */
    public function testAddressBookGetPermissionByAddrebookId()
    {
    }

    /**
     * Test case for addressBookGetSearchField
     *
     * This call returns all the possible fields for search in address book.
     *
     */
    public function testAddressBookGetSearchField()
    {
    }

    /**
     * Test case for addressBookGetSelectField
     *
     * This call returns all the possible select fields for search in address book.
     *
     */
    public function testAddressBookGetSelectField()
    {
    }

    /**
     * Test case for addressBookInsertAddressBook
     *
     * This call inserts new addres book item.
     *
     */
    public function testAddressBookInsertAddressBook()
    {
    }

    /**
     * Test case for addressBookInsertAddressBook_0
     *
     * This call inserts new address book items.
     *
     */
    public function testAddressBookInsertAddressBook0()
    {
    }

    /**
     * Test case for addressBookInsertContact
     *
     * This call inserts new contact of a address book item.
     *
     */
    public function testAddressBookInsertContact()
    {
    }

    /**
     * Test case for addressBookPostSearch
     *
     * This call searches address book items.
     *
     */
    public function testAddressBookPostSearch()
    {
    }

    /**
     * Test case for addressBookPutSelectField
     *
     * This call saves the select fields with the user settings.
     *
     */
    public function testAddressBookPutSelectField()
    {
    }

    /**
     * Test case for addressBookSetPermissionByAddrebookId
     *
     * This call saves all permissions for an AddreBook.
     *
     */
    public function testAddressBookSetPermissionByAddrebookId()
    {
    }

    /**
     * Test case for addressBookUpdateAddressBook
     *
     * This call updates a addresbook item.
     *
     */
    public function testAddressBookUpdateAddressBook()
    {
    }

    /**
     * Test case for addressBookUpdateContact
     *
     * This call updates a contact.
     *
     */
    public function testAddressBookUpdateContact()
    {
    }
}
