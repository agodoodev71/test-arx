<?php
/**
 * SignApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * SignApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SignApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for signDeleteSignCert
     *
     * This call deletes a signature certificate.
     *
     */
    public function testSignDeleteSignCert()
    {
    }

    /**
     * Test case for signGetRelatedSignCertList
     *
     * This call returns the related certificates of a given Sign certificate (es: Telecom Remote Provider).
     *
     */
    public function testSignGetRelatedSignCertList()
    {
    }

    /**
     * Test case for signGetSignCert
     *
     * This call returs a specific signature certificate.
     *
     */
    public function testSignGetSignCert()
    {
    }

    /**
     * Test case for signGetSignCertList
     *
     * This call returs all signature certificates of user.
     *
     */
    public function testSignGetSignCertList()
    {
    }

    /**
     * Test case for signGetSignCertTypeList
     *
     * This call returs all signature certificates.
     *
     */
    public function testSignGetSignCertTypeList()
    {
    }

    /**
     * Test case for signGetSignCertUseList
     *
     * This call returns the automatic use of a given Sign certificate.
     *
     */
    public function testSignGetSignCertUseList()
    {
    }

    /**
     * Test case for signGetVerifyInfo
     *
     * .
     *
     */
    public function testSignGetVerifyInfo()
    {
    }

    /**
     * Test case for signInsertSignCert
     *
     * This call inserts a signature certificate.
     *
     */
    public function testSignInsertSignCert()
    {
    }

    /**
     * Test case for signRemoteSign
     *
     * This call executes a remote signature operation.
     *
     */
    public function testSignRemoteSign()
    {
    }

    /**
     * Test case for signRemoteSignTaskWork
     *
     * This call executes a remote signature operation on a TaskWork list.
     *
     */
    public function testSignRemoteSignTaskWork()
    {
    }

    /**
     * Test case for signTestSignCert
     *
     * This call tests a Sign certificate.
     *
     */
    public function testSignTestSignCert()
    {
    }

    /**
     * Test case for signUpdateSignCert
     *
     * This call updates a signature certificate.
     *
     */
    public function testSignUpdateSignCert()
    {
    }

    /**
     * Test case for signUpdateSignCertUseList
     *
     * This call updates the automatic use for a given Sign certificate.
     *
     */
    public function testSignUpdateSignCertUseList()
    {
    }
}
