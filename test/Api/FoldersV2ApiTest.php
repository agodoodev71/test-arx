<?php
/**
 * FoldersV2ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * FoldersV2ApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FoldersV2ApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for foldersV2AutoinsertInFolderByDocnumber
     *
     * This method recalculate folder for profile.
     *
     */
    public function testFoldersV2AutoinsertInFolderByDocnumber()
    {
    }

    /**
     * Test case for foldersV2Delete
     *
     * This method allow to delete a folder.
     *
     */
    public function testFoldersV2Delete()
    {
    }

    /**
     * Test case for foldersV2DeleteArxDriveConfiguration
     *
     * This method delete the arxdrive configuration for the folder.
     *
     */
    public function testFoldersV2DeleteArxDriveConfiguration()
    {
    }

    /**
     * Test case for foldersV2FindByDocnumber
     *
     * This method allows to find folders that contains docnumber.
     *
     */
    public function testFoldersV2FindByDocnumber()
    {
    }

    /**
     * Test case for foldersV2FindByName
     *
     * This method allows to find folders by their name.
     *
     */
    public function testFoldersV2FindByName()
    {
    }

    /**
     * Test case for foldersV2FindByNameOld
     *
     * This method allows to find folders by their name.
     *
     */
    public function testFoldersV2FindByNameOld()
    {
    }

    /**
     * Test case for foldersV2FindInFolderByName
     *
     * This method allows to find folders by their parent and name.
     *
     */
    public function testFoldersV2FindInFolderByName()
    {
    }

    /**
     * Test case for foldersV2GetArchiveInfo
     *
     * This method returns the profile configuration for a folder.
     *
     */
    public function testFoldersV2GetArchiveInfo()
    {
    }

    /**
     * Test case for foldersV2GetArxDriveConfiguration
     *
     * This method returns the ArxDrive configuration for the folder.
     *
     */
    public function testFoldersV2GetArxDriveConfiguration()
    {
    }

    /**
     * Test case for foldersV2GetById
     *
     * This method return the folders contained in specified folder.
     *
     */
    public function testFoldersV2GetById()
    {
    }

    /**
     * Test case for foldersV2GetByParentId
     *
     * This method return the folders contained in specified parent folder.
     *
     */
    public function testFoldersV2GetByParentId()
    {
    }

    /**
     * Test case for foldersV2GetDocumentsById
     *
     * This methods return the profiles contained in a folder.  This call could not be compatible with some programming language, in this case use the call api/Folders/{id}/documents.
     *
     */
    public function testFoldersV2GetDocumentsById()
    {
    }

    /**
     * Test case for foldersV2GetFolderPermission
     *
     * This method returns the permissions for the folder.
     *
     */
    public function testFoldersV2GetFolderPermission()
    {
    }

    /**
     * Test case for foldersV2InsertDocnumbers
     *
     * This method allow to insert docnumbers in a folder.
     *
     */
    public function testFoldersV2InsertDocnumbers()
    {
    }

    /**
     * Test case for foldersV2Move
     *
     * This method allows to change the parent of a folder.
     *
     */
    public function testFoldersV2Move()
    {
    }

    /**
     * Test case for foldersV2New
     *
     * This method allow to create a new folder in the parent folder specified.
     *
     */
    public function testFoldersV2New()
    {
    }

    /**
     * Test case for foldersV2NewFolder
     *
     * This method allow to create a new folder in the parent folder specified.
     *
     */
    public function testFoldersV2NewFolder()
    {
    }

    /**
     * Test case for foldersV2RemoveDocumentsInFolder
     *
     * This method allows to remove some docnumber from a folder.
     *
     */
    public function testFoldersV2RemoveDocumentsInFolder()
    {
    }

    /**
     * Test case for foldersV2Rename
     *
     * This method allows to rename a folder.
     *
     */
    public function testFoldersV2Rename()
    {
    }

    /**
     * Test case for foldersV2RenameOld
     *
     * This method allows to rename a folder.
     *
     */
    public function testFoldersV2RenameOld()
    {
    }

    /**
     * Test case for foldersV2SetArchiveInfo
     *
     * This method allows to set the profile information for a folder.
     *
     */
    public function testFoldersV2SetArchiveInfo()
    {
    }

    /**
     * Test case for foldersV2SetArxDriveConfiguration
     *
     * This method sets the ArxDrive configuration for the folder.
     *
     */
    public function testFoldersV2SetArxDriveConfiguration()
    {
    }

    /**
     * Test case for foldersV2SetFolderPermission
     *
     * This method sets the permissions for the folder.
     *
     */
    public function testFoldersV2SetFolderPermission()
    {
    }
}
